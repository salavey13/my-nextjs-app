@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* Light and Dark Theme Variables */
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 0%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 0%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 0%;
    --primary: 220.9 39.3% 11%;
    --primary-foreground: 210 20% 98%;
    --secondary: 220 14.3% 95.9%;
    --secondary-foreground: 0 0% 0%;
    --muted: 220 14.3% 95.9%;
    --muted-foreground: 220 8.9% 46.1%;
    --accent: 220 14.3% 95.9%;
    --accent-foreground: 220.9 39.3% 11%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 20% 98%;
    --border: 220 13% 91%;
    --input: 220 13% 91%;
    --ring: 224 71.4% 4.1%;
    --radius: 0.5rem;
    --accent-color: #E1FF01; /* Bright yellow accent */
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --background: 220 13% 18%;
      --foreground: 210 15% 98%;
      --card: 220 13% 24%;
      --card-foreground: 210 15% 98%;
      --popover: 220 13% 24%;
      --popover-foreground: 210 15% 98%;
      --primary: 210 20% 40%;
      --primary-foreground: 210 15% 98%;
      --secondary: 220 13% 28%;
      --secondary-foreground: 210 15% 98%;
      --muted: 220 13% 24%;
      --muted-foreground: 220 15% 70%;
      --accent: 220 13% 24%;
      --accent-foreground: 210 15% 98%;
      --destructive: 0 84.2% 60.2%;
      --destructive-foreground: 210 15% 98%;
      --border: 220 13% 30%;
      --input: 220 13% 28%;
      --ring: 220 20% 40%;
      --radius: 0.5rem;
    }
  }

  body {
    @apply bg-background text-foreground;
    margin: 0;
    padding: 0;
    font-family: 'Inter', sans-serif;
    background-color: hsl(var(--background));
    color: hsl(var(--foreground)); 
    text-rendering: optimizeLegibility;
    transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  html {
    height: 100%;
  }

  /* Fixed h1 to remove stroke and add a clean gradient effect */
h1 {
  background: linear-gradient(45deg, #8e2de2, #4a00e0, #9c27b0);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
  animation: slide-in-left 1s ease-out;
  /* Removed the stroke */
  font-weight: 700;
}

/* Fix button text color on active state */
button {
  background-color: var(--accent-color);
  color: black; /* Ensure black text on bright yellow */
}

button:hover,
button:focus,
button:active {
  background-color: var(--accent-color);
  color: black; /* Keep text black during interaction */
}


@keyframes glitchyFadeIn {
  0% {
    opacity: 0;
    transform: translateX(5px);
  }
  50% {
    opacity: 0.7;
    transform: translateX(-3px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.animate-enter {
  animation: glitchyFadeIn 0.5s ease-in-out forwards;
}

.animate-leave {
  animation: glitchyFadeIn 0.5s ease-in-out reverse forwards;
}
  
/* Added neon glow variant */
.shadow-neon-glow {
  text-shadow: 0 0 8px rgba(0, 0, 0, 0.13), 0 0 16px rgba(136, 255, 0, 0.322);
}

/* Added neumorphism variant */
.shadow-neumorphism {
  background: hsl(var(--background));
  border-radius: var(--radius);
  box-shadow: 8px 8px 16px hsl(var(--background) / 0.4), -8px -8px 16px hsl(var(--foreground) / 0.2);
}

/* Button Ripple Effect */
@keyframes glitchyFadeIn {
  0% {
    opacity: 0;
    transform: translateX(5px);
  }
  50% {
    opacity: 0.7;
    transform: translateX(-3px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Add glitch shadow effect */
.glitchy-toast {
  filter: drop-shadow(0 0 5px rgba(255, 0, 0, 0.7)) drop-shadow(0 0 10px rgba(255, 255, 255, 0.5));
}

/* Navigation Animations */
nav {
  transition: transform 0.5s ease;
}


  @keyframes slide-in-left {
    from {
      transform: translateX(-69%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  .gradient-text {
    background: linear-gradient(45deg, #ff6f61, #d4a5a5);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .main-content {
    min-height: calc(100vh - 128px);
    padding-top: 64px;
    padding-bottom: 64px;
    backdrop-filter: blur(10px);
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.9) 0%, rgba(240, 240, 240, 0.8) 100%);
  }

  header, footer {
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    background-color: hsl(var(--background) / 0.8);
    backdrop-filter: blur(10px);
  }

  * {
    @apply border-border;
  }

  .loader {
    border-top-color: hsl(var(--primary));
  }

  .neon-glow {
    text-shadow: 0 0 8px rgba(0, 0, 0, 0.13),
                0 0 16px rgba(136, 255, 0, 0.322),
                0 0 24px rgba(132, 0, 255, 0.007);
  }

  /* Custom Scrollbars */
  ::-webkit-scrollbar {
    width: 0px;
    height: 0px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--background));
  }

  ::-webkit-scrollbar-thumb {
    background-color: hsl(var(--primary));
    border-radius: 10px;
    border: 3px solid hsl(var(--background));
  }


  /* Button Ripple Effect */
  @keyframes ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }

  .button-ripple {
    position: relative;
    overflow: hidden;
  }

  .button-ripple::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.4);
    pointer-events: none;
    border-radius: 50%;
    transform: scale(0);
    animation: ripple 0.6s linear;
  }

  .button-ripple:active::after {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) scale(0);
  }

  /* Neumorphism */
  .neumorphism {
    background: hsl(var(--background));
    border-radius: var(--radius);
    box-shadow: 8px 8px 16px hsl(var(--background) / 0.4), -8px -8px 16px hsl(var(--foreground) / 0.2);
  }

  .input-neumorphism {
    @apply neumorphism;
    padding: 0.5rem 1rem;
    border: none;
  }

  .checkbox-neumorphism {
    @apply neumorphism;
    width: 24px;
    height: 24px;
  }

  .button-hover {
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    
    color: "#000000";
  }

  .button-hover:hover {
    background-color: var(--accent-color);
    color: "#000000";
    box-shadow: 0 0 10px var(--accent-color);
  }

  .textarea-neumorphism, .dropdown-neumorphism {
    @apply neumorphism;
    padding: 0.5rem 1rem;
    border: none;
    background: hsl(var(--background));
    color: hsl(var(--foreground));
  }
  
  .textarea-neumorphism::placeholder, .dropdown-neumorphism::placeholder {
    color: hsl(var(--muted-foreground));
  }

  /* Dark mode: Adjust the background and accent color for checkboxes */
  @media (prefers-color-scheme: dark) {
    .checkbox-neumorphism {
      background-color: hsl(var(--background));
    }

    .peer:checked + .CheckboxIndicator {
      background-color: hsl(var(--accent-color));
    }
  }

  /* Example CSS for animations */
.game-board {
  min-height: calc(100vh);
    padding-top: 64px;
    padding-bottom: 64px;
  position: relative;
  width: 100vw;
  height: calc(100vh);
  overflow: hidden;
}

.shuffle-button {
  position: fixed;
  bottom: 69px;
  left: 20px;
  background-color: #007bff;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 50%;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.shuffle-button:hover {
  background-color: #0056b3;
}

@keyframes ticker {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}

.animate-ticker {
  animation: ticker 30s linear infinite;
  white-space: nowrap; /* Prevents line breaks */
  max-width: max-content; /* Ensures container only takes required width */
}
}
